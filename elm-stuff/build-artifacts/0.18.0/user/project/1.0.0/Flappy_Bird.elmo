var _user$project$Flappy_Bird$init = {
	ctor: '_Tuple2',
	_0: {
		counter: 0,
		position: {x: 200, y: 300},
		stage: 0,
		pipX: 600,
		pipe: {p: 100, q: 300},
		time: 0
	},
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Flappy_Bird$buttonStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'font-size', _1: '15px'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'padding', _1: '4px'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'margin', _1: '5px'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'border-radius', _1: '7px'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'background-color', _1: '#eff5f5'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'font-family', _1: 'Comic Sans MS'},
							_1: {ctor: '[]'}
						}
					}
				}
			}
		}
	});
var _user$project$Flappy_Bird$scoreStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'height', _1: '200px'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'padding-top', _1: '100px'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'font-family', _1: 'Comic Sans MS'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'font-size', _1: '20px'},
					_1: {ctor: '[]'}
				}
			}
		}
	});
var _user$project$Flappy_Bird$titleStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'font-size', _1: '40px'},
		_1: {ctor: '[]'}
	});
var _user$project$Flappy_Bird$page2Style = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '200px'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '35%'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'font-family', _1: 'Comic Sans MS'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'position', _1: 'absolute'},
						_1: {ctor: '[]'}
					}
				}
			}
		}
	});
var _user$project$Flappy_Bird$page0Style = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '200px'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '20%'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'font-family', _1: 'Comic Sans MS'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'position', _1: 'absolute'},
						_1: {ctor: '[]'}
					}
				}
			}
		}
	});
var _user$project$Flappy_Bird$svgStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'width', _1: '500px'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'height', _1: '600px'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'background-color', _1: 'black'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'margin', _1: '200px'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '0px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'float', _1: 'left'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'margin-bottom', _1: '10px'},
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		}
	});
var _user$project$Flappy_Bird$page1 = function (model) {
	var h2 = _elm_lang$core$Basics$toString((600 - model.pipe.q) - model.pipe.p);
	var y1 = _elm_lang$core$Basics$toString(model.pipe.q + model.pipe.p);
	var h1 = _elm_lang$core$Basics$toString(model.pipe.q);
	var pipeX = _elm_lang$core$Basics$toString(model.pipX);
	var posY = _elm_lang$core$Basics$toString(model.position.y);
	var posX = _elm_lang$core$Basics$toString(model.position.x);
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _user$project$Flappy_Bird$svgStyle,
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$svg,
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$width('400'),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$height('600'),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$circle,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$cx(posX),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$cy(posY),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$r('15'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$fill('white'),
												_1: {ctor: '[]'}
											}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$svg$Svg$rect,
									{
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$x(pipeX),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$y('0'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$width('20'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$height(h1),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$fill('white'),
														_1: {ctor: '[]'}
													}
												}
											}
										}
									},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$svg$Svg$rect,
										{
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$x(pipeX),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$y(y1),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$width('20'),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$height(h2),
														_1: {
															ctor: '::',
															_0: _elm_lang$svg$Svg_Attributes$fill('white'),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										},
										{ctor: '[]'}),
									_1: {ctor: '[]'}
								}
							}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _user$project$Flappy_Bird$scoreStyle,
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$svg$Svg$text(
							_elm_lang$core$Basics$toString(model.counter)),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Flappy_Bird$Model = F6(
	function (a, b, c, d, e, f) {
		return {counter: a, position: b, stage: c, pipe: d, pipX: e, time: f};
	});
var _user$project$Flappy_Bird$TryAgain = {ctor: 'TryAgain'};
var _user$project$Flappy_Bird$page2 = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Flappy_Bird$page2Style,
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{
					ctor: '::',
					_0: _user$project$Flappy_Bird$titleStyle,
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$svg$Svg$text('Game over'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text('Your score: '),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						_elm_lang$core$Basics$toString(model.counter)),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$br,
							{ctor: '[]'},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$br,
								{ctor: '[]'},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$button,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(_user$project$Flappy_Bird$TryAgain),
										_1: {
											ctor: '::',
											_0: _user$project$Flappy_Bird$buttonStyle,
											_1: {ctor: '[]'}
										}
									},
									{
										ctor: '::',
										_0: _elm_lang$svg$Svg$text('Try Again'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		});
};
var _user$project$Flappy_Bird$RandResult = function (a) {
	return {ctor: 'RandResult', _0: a};
};
var _user$project$Flappy_Bird$update = F2(
	function (msg, model) {
		var _p0 = model.stage;
		switch (_p0) {
			case 0:
				var _p1 = msg;
				if (_p1.ctor === 'Begin') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{stage: 1}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 1:
				var _p2 = msg;
				_v2_3:
				do {
					switch (_p2.ctor) {
						case 'KeyMsg':
							if (_p2._0 === 32) {
								var posY = model.position.y;
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Native_Utils.update(
										model,
										{
											position: {x: model.position.x, y: model.position.y - 60}
										}),
									_1: _elm_lang$core$Platform_Cmd$none
								};
							} else {
								break _v2_3;
							}
						case 'Tick':
							var cmdR = A2(
								_elm_lang$core$Random$generate,
								_user$project$Flappy_Bird$RandResult,
								A2(
									_elm_lang$core$Random$pair,
									A2(_elm_lang$core$Random$int, 90, 150),
									A2(_elm_lang$core$Random$int, 20, 400)));
							var posY = model.position.y + 3;
							var posX = model.position.x;
							var modelN = _elm_lang$core$Native_Utils.update(
								model,
								{
									position: {x: posX, y: posY},
									stage: ((_elm_lang$core$Native_Utils.cmp(model.position.y, 15) > 0) && (_elm_lang$core$Native_Utils.cmp(model.position.y, 585) < 0)) ? ((((_elm_lang$core$Native_Utils.cmp(posX - model.pipX, -3) > -1) && (_elm_lang$core$Native_Utils.cmp(posX - model.pipX, 19) < 1)) && ((_elm_lang$core$Native_Utils.cmp(posY, model.pipe.q + 17) < 0) || (_elm_lang$core$Native_Utils.cmp(posY, (model.pipe.q + model.pipe.p) - 10) > 0))) ? 2 : 1) : 2,
									counter: (_elm_lang$core$Native_Utils.eq(model.stage, 1) && _elm_lang$core$Native_Utils.eq(posX, model.pipX + 10)) ? (model.counter + 1) : model.counter,
									pipX: model.pipX - 2,
									time: model.time + 1
								});
							return {ctor: '_Tuple2', _0: modelN, _1: cmdR};
						case 'RandResult':
							if (_p2._0.ctor === '_Tuple2') {
								return _elm_lang$core$Native_Utils.eq(
									A2(_elm_lang$core$Basics_ops['%'], model.time, 300),
									0) ? {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Native_Utils.update(
										model,
										{
											pipX: 600,
											pipe: {p: _p2._0._0, q: _p2._0._1}
										}),
									_1: _elm_lang$core$Platform_Cmd$none
								} : {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
							} else {
								break _v2_3;
							}
						default:
							break _v2_3;
					}
				} while(false);
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			default:
				var _p3 = msg;
				if (_p3.ctor === 'TryAgain') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								counter: 0,
								position: {x: 200, y: 300},
								stage: 0,
								pipe: {p: 200, q: 100},
								pipX: 600,
								time: 0
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
		}
	});
var _user$project$Flappy_Bird$Tick = function (a) {
	return {ctor: 'Tick', _0: a};
};
var _user$project$Flappy_Bird$KeyMsg = function (a) {
	return {ctor: 'KeyMsg', _0: a};
};
var _user$project$Flappy_Bird$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: _elm_lang$animation_frame$AnimationFrame$times(_user$project$Flappy_Bird$Tick),
			_1: {
				ctor: '::',
				_0: _elm_lang$keyboard$Keyboard$downs(_user$project$Flappy_Bird$KeyMsg),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Flappy_Bird$Begin = {ctor: 'Begin'};
var _user$project$Flappy_Bird$page0 = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Flappy_Bird$page0Style,
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{
					ctor: '::',
					_0: _user$project$Flappy_Bird$titleStyle,
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$svg$Svg$text('Flappy Circle'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$br,
					{ctor: '[]'},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg$text('OH NOoo! your circle got into a dangerous pipe area.'),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$br,
									{ctor: '[]'},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg$text('Press the spacebar to jump your circle and fly as far as you can without hitting a pipe.'),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$br,
											{ctor: '[]'},
											{ctor: '[]'}),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg$text('Also be careful not to fly over the border.'),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$br,
							{ctor: '[]'},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$button,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(_user$project$Flappy_Bird$Begin),
											_1: {
												ctor: '::',
												_0: _user$project$Flappy_Bird$buttonStyle,
												_1: {ctor: '[]'}
											}
										},
										{
											ctor: '::',
											_0: _elm_lang$svg$Svg$text('Begin'),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		});
};
var _user$project$Flappy_Bird$view = function (model) {
	var _p4 = model.stage;
	switch (_p4) {
		case 0:
			return _user$project$Flappy_Bird$page0(model);
		case 1:
			return _user$project$Flappy_Bird$page1(model);
		default:
			return _user$project$Flappy_Bird$page2(model);
	}
};
var _user$project$Flappy_Bird$main = _elm_lang$html$Html$program(
	{init: _user$project$Flappy_Bird$init, update: _user$project$Flappy_Bird$update, view: _user$project$Flappy_Bird$view, subscriptions: _user$project$Flappy_Bird$subscriptions})();
